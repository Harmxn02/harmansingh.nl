@import "tailwindcss";

html {
	scroll-behavior: smooth;
}

@theme {
	--color-background: var(--background);
	--color-foreground: var(--foreground);

	/* Custom colours */
	--color-buttonPrimary: #101010; /* Dark purple */
	--color-buttonPrimaryHover: #1e1a26; /* Lighter dark purple */
	--color-buttonSecondary: white;
	--color-buttonSecondaryHover: #cecece;

	--color-pillPrimary: rgba(106, 114, 130, 0.3);
	--color-textPrimary: #d1d5dc;

	/* Theme colours: purple */
	--color-pillSecondary: rgba(153, 125, 182, 0.3);
	--color-purple-lighter: #958ab5;
	--color-purple-light: #997db6;
	/* unused */
	--color-purple-medium: #755eac;
	--color-purple-dark: #574c9c;
	--color-purple-darker: #382f5d;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentcolor);
	}
}

@utility border-dashed {
	border-width: 1px;
	border-style: dashed;
	border-color: #878787;
	padding: 0.5rem 1rem;
}

@utility slight-purple-glow {
	text-shadow: 0 0 20px rgba(153, 125, 182, 0.5);
}

@keyframes spin-slow {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

@keyframes orbit {
	0% {
		transform: translateX(-50%) rotate(0deg) translateY(-120px) rotate(0deg);
	}
	100% {
		transform: translateX(-50%) rotate(360deg) translateY(-120px)
			rotate(-360deg);
	}
}

@keyframes pulse-slight {
	0%,
	100% {
		opacity: 0.5;
	}
	50% {
		opacity: 0.7;
	}
}

@layer utilities {
	.animate-spin-slow {
		animation: spin-slow 15s linear infinite;
	}
	.animate-orbit {
		animation: orbit 8s linear infinite;
	}
	.animate-pulse-slight {
		animation: pulse-slight 3s ease-in-out infinite;
	}
}

/* ====================================================================== */
/* Mobile / AOS layout fixes                                                  */
/* Prevent a thin white gap at the bottom of the page on mobile devices.   */
/* AOS uses transforms/translate which can expose the underlying root if   */
/* the html/body background isn't explicitly set or if subpixel rounding   */
/* causes overscroll. These rules make the root background explicit and    */
/* reduce the chance of overflow from transforms.                         */
/* ====================================================================== */

html,
body,
#__next {
	height: 100%;
	min-height: 100%;
	/* dark background used across the site; override if you use a different one */
	background-color: #08000b;
}

/* Prevent horizontal/vertical overscroll showing underlying white areas */
body {
	overflow-x: hidden;
	-webkit-overflow-scrolling: touch; /* smoother scrolling on iOS */
}

/* Hint to browsers that animated elements will change transform/opacity so
	 they can optimize compositing and avoid visual artifacts during AOS
	 transitions. Also force a 3D layer to avoid subpixel gaps on some devices. */
[data-aos],
.aos-init,
.aos-animate {
	will-change: transform, opacity;
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	transform: translateZ(0);
}

/* If you still see a gap after this change, try adjusting the background-color
	 to match your site's theme or add `overflow-y: hidden` temporarily to body
	 to diagnose whether content is overscrolling. */
